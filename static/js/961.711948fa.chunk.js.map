{"version":3,"file":"static/js/961.711948fa.chunk.js","mappings":"0OA4EA,UAjEqB,WAAO,IAADA,EAAAC,EACzBC,GAA0BC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAkCT,EAAAA,EAAAA,WAAS,GAAMU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAEtBG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAA2B,QAArBrB,EAAe,QAAfC,EAACiB,EAASI,aAAK,IAAArB,OAAA,EAAdA,EAAgBsB,YAAI,IAAAvB,EAAAA,EAAI,KA2B3D,OAzBAwB,EAAAA,EAAAA,YAAU,WAAO,IAADC,EACd,GAAKT,EAAL,CAEA,IAAMU,EAAa,IAAIC,iBAEL,YAAAF,EAAAA,IAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEjBpB,GAAa,GAAMmB,EAAAE,KAAA,EACIC,EAAAA,EAAAA,oBACrBrB,EACAU,GACA,KAAD,EAHKM,EAAQE,EAAAI,KAId/B,EAASyB,GACTrB,GAAS,GACTI,GAAa,GAAOmB,EAAAE,KAAA,oBAAAF,EAAAC,KAAA,GAAAD,EAAAK,GAAAL,EAAA,SAEE,aAAlBA,EAAAK,GAAMC,QAAsB,CAAAN,EAAAE,KAAA,gBAAAF,EAAAO,OAAA,kBAEhC9B,EAASuB,EAAAK,GAAMC,SACfzB,GAAa,GAAO,yBAAAmB,EAAAQ,OAAA,GAAAX,EAAA,oBAEvBY,MAAA,KAAAC,UAAA,CACDC,EArBoB,CAsBtB,GAAG,CAAC7B,KAGF8B,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAI/B,EAAoBgC,QAAQJ,UACpCC,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAACC,cAAe,OAAON,SAAE,WAEjCtC,IACCuC,EAAAA,EAAAA,KAACM,EAAAA,GAAa,CACZf,QACE,gQAILlC,IAAUQ,IAAamC,EAAAA,EAAAA,KAACO,EAAAA,GAAgB,CAAClD,MAAOA,IAChDQ,IAAamC,EAAAA,EAAAA,KAACQ,EAAAA,GAAoB,KACjC/C,IAAUI,IACVgC,EAAAA,EAAAA,MAAA,OAAKY,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQC,aAAc,QAASb,SAAA,EACjEC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,OAAMH,UACbC,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAAAL,SAAC,YAEVC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,UAASH,UAChBC,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAAAL,SAAC,kBAIdC,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAACC,UAAUd,EAAAA,EAAAA,KAACe,EAAAA,GAAU,IAAIhB,UACjCC,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,QAIf,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { TMDB_API } from 'api/FetchMovieApi';\nimport { Suspense, useState, useEffect, useRef } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport {\n  MovieDetailsItem,\n  PageLoader,\n  Notifications,\n  Button,\n  SkeletonMovieDetails,\n} from 'components';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    const controller = new AbortController();\n\n    const getMovieById = async () => {\n      try {\n        setIsLoading(true);\n        const response = await TMDB_API.getMovieDetailsById(\n          movieId,\n          controller\n        );\n        setMovie(response);\n        setError(false);\n        setIsLoading(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    getMovieById();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>\n        <Button $marginBottom={'20px'}>{'Back'}</Button>\n      </Link>\n      {error && (\n        <Notifications\n          message={\n            'Sorry, but something went wrong while attempting to generate the movie. We are working to resolve this issue as soon as possible. Please try again later or contact our support team for further assistance. Thank you for your patience and understanding!'\n          }\n        />\n      )}\n      {movie && !isLoading && <MovieDetailsItem movie={movie} />}\n      {isLoading && <SkeletonMovieDetails />}\n      {!error && !isLoading && (\n        <div style={{ display: 'flex', gap: '30px', marginBottom: '30px' }}>\n          <Link to=\"cast\">\n            <Button>Cast</Button>\n          </Link>\n          <Link to=\"reviews\">\n            <Button>Reviews</Button>\n          </Link>\n        </div>\n      )}\n      <Suspense fallback={<PageLoader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","_ref","controller","AbortController","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","arguments","getMovieById","_jsxs","_Fragment","children","_jsx","Link","to","current","Button","$marginBottom","Notifications","MovieDetailsItem","SkeletonMovieDetails","style","display","gap","marginBottom","Suspense","fallback","PageLoader","Outlet"],"sourceRoot":""}