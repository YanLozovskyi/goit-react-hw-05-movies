{"version":3,"file":"static/js/310.fe342f8a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","pages/Movies/Movies.jsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { TMDB_API } from 'api/FetchMovieApi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport MovieList from 'components/MovieList/MovieList';\nimport {\n  SearchBar,\n  Notifications,\n  Button,\n  SkeletonMovieCard,\n} from 'components';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadMore, setIsLoadMore] = useState(false);\n  const [page, setPage] = useState(1);\n  const [isVisible, setIsVisible] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isQueryEmptyNotified, setIsQueryEmptyNotified] = useState(true);\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = value => {\n    const trimmedValue = value.trim();\n\n    if (trimmedValue === '') {\n      setSearchParams({});\n      if (!isQueryEmptyNotified) {\n        toast.info(\"Your query is empty. We'll show you this week's trends.\");\n        setIsQueryEmptyNotified(true);\n      } else {\n        toast.info('Please enter your request');\n      }\n      return;\n    }\n    if (trimmedValue === query)\n      return toast.info(\n        `You've already entered: ${query}. Enter another request`\n      );\n    setSearchParams({ query: value });\n    setPage(1);\n  };\n\n  useEffect(() => {\n    if (query) return;\n    const controller = new AbortController();\n\n    const getTrendMovies = async () => {\n      setIsVisible(!!query);\n      setIsLoading(true);\n      try {\n        const response = await TMDB_API.getTrendMoviesByParam(\n          'week',\n          controller\n        );\n\n        setMovies(response);\n        setError(false);\n        setIsLoading(false);\n      } catch (error) {\n        if (error.message === 'canceled') return;\n\n        setError(error.message);\n        setIsLoading(false);\n      }\n    };\n    getTrendMovies();\n\n    return () => controller.abort();\n  }, [query]);\n\n  useEffect(() => {\n    if (!query) return;\n\n    if (page === 1) {\n      setMovies([]);\n      setIsLoading(true);\n    }\n\n    const controller = new AbortController();\n\n    const searchMoviesByQuery = async () => {\n      setIsLoadMore(true);\n      try {\n        const {\n          total_pages,\n          total_results,\n          results,\n          page: currentPage,\n        } = await TMDB_API.searchMoviesByQuery(query, page, controller);\n        setMovies(prev => [...prev, ...results]);\n        setIsVisible(currentPage < total_pages);\n        setError(false);\n        setIsLoadMore(false);\n        setIsLoading(false);\n        if (total_results > 0 && page === 1) {\n          toast.info(`Found ${total_results} movies`);\n          setIsQueryEmptyNotified(false);\n        }\n      } catch (error) {\n        if (error.message === 'canceled') return;\n\n        setError(error.message);\n        setIsLoadMore(false);\n      }\n    };\n    searchMoviesByQuery();\n\n    return () => controller.abort();\n  }, [page, query]);\n\n  const handleLoadMore = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <>\n      <ToastContainer position=\"top-right\" autoClose={3000} theme=\"dark\" />\n      <SearchBar onSubmit={handleSubmit} />\n      {!isLoading && !error && !query && (\n        <Notifications message={'Weekly trends'} />\n      )}\n      {!isLoading && !error && query && movies?.length !== 0 && (\n        <Notifications message={`Movies by result ${query}`} />\n      )}\n      {!isLoading && !error && movies?.length === 0 && query && (\n        <Notifications\n          message={`No results were found for your movie search '${query}'. Please try a different query`}\n        />\n      )}\n      {error && (\n        <Notifications\n          message={\n            'Sorry, but something went wrong while attempting to generate the movies. We are working to resolve this issue as soon as possible. Please try again later or contact our support team for further assistance. Thank you for your patience and understanding!'\n          }\n        />\n      )}\n      {isLoading && <SkeletonMovieCard />}\n      {!isLoading && <MovieList movies={movies} />}\n      {isVisible && query && (\n        <Button\n          onClick={handleLoadMore}\n          disabled={isLoadMore}\n          $marginLeft={'auto'}\n        >\n          {isLoadMore ? 'Loading...' : 'Load More'}\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","e","t","f","n","Array","isArray","arguments","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","isLoadMore","setIsLoadMore","_useState9","_useState10","page","setPage","_useState11","_useState12","isVisible","setIsVisible","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","_useState13","_useState14","isQueryEmptyNotified","setIsQueryEmptyNotified","query","get","useEffect","_ref","controller","AbortController","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","TMDB_API","sent","t0","message","abrupt","stop","apply","getTrendMovies","abort","_ref2","_callee2","_yield$TMDB_API$searc","total_pages","total_results","results","currentPage","_context2","concat","_toConsumableArray","toast","searchMoviesByQuery","_jsxs","_Fragment","children","_jsx","ToastContainer","position","autoClose","theme","SearchBar","onSubmit","value","trimmedValue","trim","Notifications","SkeletonMovieCard","MovieList","Button","onClick","disabled","$marginLeft"],"sourceRoot":""}